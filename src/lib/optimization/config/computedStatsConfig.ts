import {
  ADDITIONAL_DMG_TYPE,
  BASIC_DMG_TYPE,
  BREAK_DMG_TYPE,
  DOT_DMG_TYPE,
  FUA_DMG_TYPE,
  MEMO_DMG_TYPE,
  SKILL_DMG_TYPE,
  SUPER_BREAK_DMG_TYPE,
  ULT_DMG_TYPE,
} from 'lib/conditionals/conditionalConstants'

enum StatCategory {
  CD,
  NONE,
}

export type ComputedStatsConfigBaseType = {
  category?: StatCategory
  default?: number
  flat?: boolean
  whole?: boolean
}

export const BaseComputedStatsConfig = {
  HP_P: {},
  ATK_P: {},
  DEF_P: {},
  SPD_P: {},
  HP: { flat: true },
  ATK: { flat: true },
  DEF: { flat: true },
  SPD: { flat: true, default: 0.0001 },
  CR: {},
  CD: {},
  EHR: {},
  RES: {},
  BE: {},
  ERR: {},
  OHB: {},

  PHYSICAL_DMG_BOOST: {},
  FIRE_DMG_BOOST: {},
  ICE_DMG_BOOST: {},
  LIGHTNING_DMG_BOOST: {},
  WIND_DMG_BOOST: {},
  QUANTUM_DMG_BOOST: {},
  IMAGINARY_DMG_BOOST: {},

  ELEMENTAL_DMG: {},

  BASE_HP: {},
  BASE_ATK: {},
  BASE_DEF: {},
  BASE_SPD: {},

  BASIC_SCALING: {},
  SKILL_SCALING: {},
  ULT_SCALING: {},
  FUA_SCALING: {},
  DOT_SCALING: {},

  BASIC_CR_BOOST: {},
  SKILL_CR_BOOST: {},
  ULT_CR_BOOST: {},
  FUA_CR_BOOST: {},

  BASIC_CD_BOOST: {},
  SKILL_CD_BOOST: {},
  ULT_CD_BOOST: {},
  FUA_CD_BOOST: {},

  BASIC_BOOST: {},
  SKILL_BOOST: {},
  ULT_BOOST: {},
  FUA_BOOST: {},
  DOT_BOOST: {},
  BREAK_BOOST: {},
  ADDITIONAL_BOOST: {},

  VULNERABILITY: {},
  BASIC_VULNERABILITY: {},
  SKILL_VULNERABILITY: {},
  ULT_VULNERABILITY: {},
  FUA_VULNERABILITY: {},
  DOT_VULNERABILITY: {},
  BREAK_VULNERABILITY: {},

  DEF_PEN: {},
  BASIC_DEF_PEN: {},
  SKILL_DEF_PEN: {},
  ULT_DEF_PEN: {},
  FUA_DEF_PEN: {},
  DOT_DEF_PEN: {},
  BREAK_DEF_PEN: {},
  SUPER_BREAK_DEF_PEN: {},

  RES_PEN: {},
  PHYSICAL_RES_PEN: {},
  FIRE_RES_PEN: {},
  ICE_RES_PEN: {},
  LIGHTNING_RES_PEN: {},
  WIND_RES_PEN: {},
  QUANTUM_RES_PEN: {},
  IMAGINARY_RES_PEN: {},

  // These should technically be split by element but they are rare enough to ignore imo (e.g. DHIL basic attack)
  BASIC_RES_PEN: {},
  SKILL_RES_PEN: {},
  ULT_RES_PEN: {},
  FUA_RES_PEN: {},
  DOT_RES_PEN: {},

  BASIC_DMG: { flat: true },
  SKILL_DMG: { flat: true },
  ULT_DMG: { flat: true },
  FUA_DMG: { flat: true },
  DOT_DMG: { flat: true },
  BREAK_DMG: { flat: true },
  COMBO_DMG: { flat: true },

  DMG_RED_MULTI: { default: 1 }, // Dmg reduction multiplier for EHP calcs - this should be multiplied by (1 - multi)
  EHP: { flat: true },
  SHIELD_BOOST: {},

  DOT_CHANCE: {},
  EFFECT_RES_PEN: {},

  // Black swan's stacking DoTs, the initial DoT has full value but subsequent stacks have reduced (DOT_SPLIT) value
  DOT_SPLIT: {},
  DOT_STACKS: { flat: true },

  SUMMONS: { flat: true },

  ENEMY_WEAKNESS_BROKEN: { flat: true },

  SUPER_BREAK_MODIFIER: {},
  BASIC_SUPER_BREAK_MODIFIER: {},
  BASIC_TOUGHNESS_DMG: { flat: true },
  SKILL_TOUGHNESS_DMG: { flat: true },
  ULT_TOUGHNESS_DMG: { flat: true },
  FUA_TOUGHNESS_DMG: { flat: true },
  MEMO_SKILL_TOUGHNESS_DMG: { flat: true },

  // True dmg
  TRUE_DMG_MODIFIER: {},
  BASIC_TRUE_DMG_MODIFIER: {},
  SKILL_TRUE_DMG_MODIFIER: {},
  ULT_TRUE_DMG_MODIFIER: {},
  FUA_TRUE_DMG_MODIFIER: {},
  BREAK_TRUE_DMG_MODIFIER: {},

  // e.g. Acheron multiplier
  BASIC_FINAL_DMG_BOOST: {},
  SKILL_FINAL_DMG_BOOST: {},
  ULT_FINAL_DMG_BOOST: {},

  // Boothill
  BASIC_BREAK_DMG_MODIFIER: {},

  // Robin
  ULT_ADDITIONAL_DMG_CR_OVERRIDE: {},
  ULT_ADDITIONAL_DMG_CD_OVERRIDE: {},

  SKILL_OHB: {},
  ULT_OHB: {},
  HEAL_TYPE: { flat: true },
  HEAL_FLAT: { flat: true },
  HEAL_SCALING: {},
  HEAL_VALUE: { flat: true },
  SHIELD_FLAT: { flat: true },
  SHIELD_SCALING: {},
  SHIELD_VALUE: { flat: true },

  BASIC_ADDITIONAL_DMG_SCALING: {},
  SKILL_ADDITIONAL_DMG_SCALING: {},
  ULT_ADDITIONAL_DMG_SCALING: {},
  FUA_ADDITIONAL_DMG_SCALING: {},

  BASIC_ADDITIONAL_DMG: { flat: true },
  SKILL_ADDITIONAL_DMG: { flat: true },
  ULT_ADDITIONAL_DMG: { flat: true },
  FUA_ADDITIONAL_DMG: { flat: true },

  MEMO_BUFF_PRIORITY: { flat: true },
  DEPRIORITIZE_BUFFS: { flat: true },

  MEMO_BASE_HP_SCALING: {},
  MEMO_BASE_HP_FLAT: { flat: true },
  MEMO_BASE_DEF_SCALING: {},
  MEMO_BASE_DEF_FLAT: { flat: true },
  MEMO_BASE_ATK_SCALING: {},
  MEMO_BASE_ATK_FLAT: { flat: true },
  MEMO_BASE_SPD_SCALING: {},
  MEMO_BASE_SPD_FLAT: { flat: true },

  MEMO_SKILL_SCALING: {},
  MEMO_TALENT_SCALING: {},

  MEMO_SKILL_DMG: { flat: true },
  MEMO_TALENT_DMG: { flat: true },

  UNCONVERTIBLE_HP_BUFF: { flat: true },
  UNCONVERTIBLE_ATK_BUFF: { flat: true },
  UNCONVERTIBLE_DEF_BUFF: { flat: true },
  UNCONVERTIBLE_SPD_BUFF: { flat: true },
  UNCONVERTIBLE_CR_BUFF: {},
  UNCONVERTIBLE_CD_BUFF: {},
  UNCONVERTIBLE_EHR_BUFF: {},
  UNCONVERTIBLE_BE_BUFF: {},
  UNCONVERTIBLE_OHB_BUFF: {},
  UNCONVERTIBLE_RES_BUFF: {},
  UNCONVERTIBLE_ERR_BUFF: {},

  BREAK_EFFICIENCY_BOOST: {},
  BASIC_BREAK_EFFICIENCY_BOOST: {}, // Boothill
  ULT_BREAK_EFFICIENCY_BOOST: {}, // Feixiao

  BASIC_DMG_TYPE: { flat: true, default: BASIC_DMG_TYPE },
  SKILL_DMG_TYPE: { flat: true, default: SKILL_DMG_TYPE },
  ULT_DMG_TYPE: { flat: true, default: ULT_DMG_TYPE },
  FUA_DMG_TYPE: { flat: true, default: FUA_DMG_TYPE },
  DOT_DMG_TYPE: { flat: true, default: DOT_DMG_TYPE },
  BREAK_DMG_TYPE: { flat: true, default: BREAK_DMG_TYPE },
  SUPER_BREAK_DMG_TYPE: { flat: true, default: SUPER_BREAK_DMG_TYPE },
  MEMO_DMG_TYPE: { flat: true, default: MEMO_DMG_TYPE },
  ADDITIONAL_DMG_TYPE: { flat: true, default: ADDITIONAL_DMG_TYPE },
  TEST_VALUE_1: {},
  TEST_VALUE_2: {},
  TEST_VALUE_3: {},
  TEST_VALUE_4: {},
  TEST_VALUE_5: {},
  TEST_VALUE_6: {},
  TEST_VALUE_7: {},
  TEST_VALUE_8: {},
  TEST_VALUE_9: {},
  TEST_VALUE_10: {},
  TEST_VALUE_11: {},
  TEST_VALUE_12: {},
  TEST_VALUE_13: {},
  TEST_VALUE_14: {},
  TEST_VALUE_15: {},
  TEST_VALUE_16: {},
  TEST_VALUE_17: {},
  TEST_VALUE_18: {},
  TEST_VALUE_19: {},
  TEST_VALUE_20: {},
  TEST_VALUE_21: {},
  TEST_VALUE_22: {},
  TEST_VALUE_23: {},
  TEST_VALUE_24: {},
  TEST_VALUE_25: {},
  TEST_VALUE_26: {},
  TEST_VALUE_27: {},
  TEST_VALUE_28: {},
  TEST_VALUE_29: {},
  TEST_VALUE_30: {},
  TEST_VALUE_31: {},
  TEST_VALUE_32: {},
  TEST_VALUE_33: {},
  TEST_VALUE_34: {},
  TEST_VALUE_35: {},
  TEST_VALUE_36: {},
  TEST_VALUE_37: {},
  TEST_VALUE_38: {},
  TEST_VALUE_39: {},
  TEST_VALUE_40: {},
  TEST_VALUE_41: {},
  TEST_VALUE_42: {},
  TEST_VALUE_43: {},
  TEST_VALUE_44: {},
  TEST_VALUE_45: {},
  TEST_VALUE_46: {},
  TEST_VALUE_47: {},
  TEST_VALUE_48: {},
  TEST_VALUE_49: {},
  TEST_VALUE_50: {},
  TEST_VALUE_51: {},
  TEST_VALUE_52: {},
  TEST_VALUE_53: {},
  TEST_VALUE_54: {},
  TEST_VALUE_55: {},
  TEST_VALUE_56: {},
  TEST_VALUE_57: {},
  TEST_VALUE_58: {},
  TEST_VALUE_59: {},
  TEST_VALUE_60: {},
  TEST_VALUE_61: {},
  TEST_VALUE_62: {},
  TEST_VALUE_63: {},
  TEST_VALUE_64: {},
  TEST_VALUE_65: {},
  TEST_VALUE_66: {},
  TEST_VALUE_67: {},
  TEST_VALUE_68: {},
  TEST_VALUE_69: {},
  TEST_VALUE_70: {},
  TEST_VALUE_71: {},
  TEST_VALUE_72: {},
  TEST_VALUE_73: {},
  TEST_VALUE_74: {},
  TEST_VALUE_75: {},
  TEST_VALUE_76: {},
  TEST_VALUE_77: {},
  TEST_VALUE_78: {},
  TEST_VALUE_79: {},
  TEST_VALUE_80: {},
  TEST_VALUE_81: {},
  TEST_VALUE_82: {},
  TEST_VALUE_83: {},
  TEST_VALUE_84: {},
  TEST_VALUE_85: {},
  TEST_VALUE_86: {},
  TEST_VALUE_87: {},
  TEST_VALUE_88: {},
  TEST_VALUE_89: {},
  TEST_VALUE_90: {},
  TEST_VALUE_91: {},
  TEST_VALUE_92: {},
  TEST_VALUE_93: {},
  TEST_VALUE_94: {},
  TEST_VALUE_95: {},
  TEST_VALUE_96: {},
  TEST_VALUE_97: {},
  TEST_VALUE_98: {},
  TEST_VALUE_99: {},
  TEST_VALUE_100: {},
  TEST_VALUE_101: {},
  TEST_VALUE_102: {},
  TEST_VALUE_103: {},
  TEST_VALUE_104: {},
  TEST_VALUE_105: {},
  TEST_VALUE_106: {},
  TEST_VALUE_107: {},
  TEST_VALUE_108: {},
  TEST_VALUE_109: {},
  TEST_VALUE_110: {},
  TEST_VALUE_111: {},
  TEST_VALUE_112: {},
  TEST_VALUE_113: {},
  TEST_VALUE_114: {},
  TEST_VALUE_115: {},
  TEST_VALUE_116: {},
  TEST_VALUE_117: {},
  TEST_VALUE_118: {},
  TEST_VALUE_119: {},
  TEST_VALUE_120: {},
  TEST_VALUE_121: {},
  TEST_VALUE_122: {},
  TEST_VALUE_123: {},
  TEST_VALUE_124: {},
  TEST_VALUE_125: {},
  TEST_VALUE_126: {},
  TEST_VALUE_127: {},
  TEST_VALUE_128: {},
  TEST_VALUE_129: {},
  TEST_VALUE_130: {},
  TEST_VALUE_131: {},
  TEST_VALUE_132: {},
  TEST_VALUE_133: {},
  TEST_VALUE_134: {},
  TEST_VALUE_135: {},
  TEST_VALUE_136: {},
  TEST_VALUE_137: {},
  TEST_VALUE_138: {},
  TEST_VALUE_139: {},
  TEST_VALUE_140: {},
  TEST_VALUE_141: {},
  TEST_VALUE_142: {},
  TEST_VALUE_143: {},
  TEST_VALUE_144: {},
  TEST_VALUE_145: {},
  TEST_VALUE_146: {},
  TEST_VALUE_147: {},
  TEST_VALUE_148: {},
  TEST_VALUE_149: {},
  TEST_VALUE_150: {},
  TEST_VALUE_151: {},
  TEST_VALUE_152: {},
  TEST_VALUE_153: {},
  TEST_VALUE_154: {},
  TEST_VALUE_155: {},
  TEST_VALUE_156: {},
  TEST_VALUE_157: {},
  TEST_VALUE_158: {},
  TEST_VALUE_159: {},
  TEST_VALUE_160: {},
  TEST_VALUE_161: {},
  TEST_VALUE_162: {},
  TEST_VALUE_163: {},
  TEST_VALUE_164: {},
  TEST_VALUE_165: {},
  TEST_VALUE_166: {},
  TEST_VALUE_167: {},
  TEST_VALUE_168: {},
  TEST_VALUE_169: {},
  TEST_VALUE_170: {},
  TEST_VALUE_171: {},
  TEST_VALUE_172: {},
  TEST_VALUE_173: {},
  TEST_VALUE_174: {},
  TEST_VALUE_175: {},
  TEST_VALUE_176: {},
  TEST_VALUE_177: {},
  TEST_VALUE_178: {},
  TEST_VALUE_179: {},
  TEST_VALUE_180: {},
  TEST_VALUE_181: {},
  TEST_VALUE_182: {},
  TEST_VALUE_183: {},
  TEST_VALUE_184: {},
  TEST_VALUE_185: {},
  TEST_VALUE_186: {},
  TEST_VALUE_187: {},
  TEST_VALUE_188: {},
  TEST_VALUE_189: {},
  TEST_VALUE_190: {},
  TEST_VALUE_191: {},
  TEST_VALUE_192: {},
  TEST_VALUE_193: {},
  TEST_VALUE_194: {},
  TEST_VALUE_195: {},
  TEST_VALUE_196: {},
  TEST_VALUE_197: {},
  TEST_VALUE_198: {},
  TEST_VALUE_199: {},
  TEST_VALUE_200: {},
  TEST_VALUE_201: {},
  TEST_VALUE_202: {},
  TEST_VALUE_203: {},
  TEST_VALUE_204: {},
  TEST_VALUE_205: {},
  TEST_VALUE_206: {},
  TEST_VALUE_207: {},
  TEST_VALUE_208: {},
  TEST_VALUE_209: {},
  TEST_VALUE_210: {},
  TEST_VALUE_211: {},
  TEST_VALUE_212: {},
  TEST_VALUE_213: {},
  TEST_VALUE_214: {},
  TEST_VALUE_215: {},
  TEST_VALUE_216: {},
  TEST_VALUE_217: {},
  TEST_VALUE_218: {},
  TEST_VALUE_219: {},
  TEST_VALUE_220: {},
  TEST_VALUE_221: {},
  TEST_VALUE_222: {},
  TEST_VALUE_223: {},
  TEST_VALUE_224: {},
  TEST_VALUE_225: {},
  TEST_VALUE_226: {},
  TEST_VALUE_227: {},
  TEST_VALUE_228: {},
  TEST_VALUE_229: {},
  TEST_VALUE_230: {},
  TEST_VALUE_231: {},
  TEST_VALUE_232: {},
  TEST_VALUE_233: {},
  TEST_VALUE_234: {},
  TEST_VALUE_235: {},
  TEST_VALUE_236: {},
  TEST_VALUE_237: {},
  TEST_VALUE_238: {},
  TEST_VALUE_239: {},
  TEST_VALUE_240: {},
  TEST_VALUE_241: {},
  TEST_VALUE_242: {},
  TEST_VALUE_243: {},
  TEST_VALUE_244: {},
  TEST_VALUE_245: {},
  TEST_VALUE_246: {},
  TEST_VALUE_247: {},
  TEST_VALUE_248: {},
  TEST_VALUE_249: {},
  TEST_VALUE_250: {},
  TEST_VALUE_251: {},
  TEST_VALUE_252: {},
  TEST_VALUE_253: {},
  TEST_VALUE_254: {},
  TEST_VALUE_255: {},
  TEST_VALUE_256: {},
  TEST_VALUE_257: {},
  TEST_VALUE_258: {},
  TEST_VALUE_259: {},
  TEST_VALUE_260: {},
  TEST_VALUE_261: {},
  TEST_VALUE_262: {},
  TEST_VALUE_263: {},
  TEST_VALUE_264: {},
  TEST_VALUE_265: {},
  TEST_VALUE_266: {},
  TEST_VALUE_267: {},
  TEST_VALUE_268: {},
  TEST_VALUE_269: {},
  TEST_VALUE_270: {},
  TEST_VALUE_271: {},
  TEST_VALUE_272: {},
  TEST_VALUE_273: {},
  TEST_VALUE_274: {},
  TEST_VALUE_275: {},
  TEST_VALUE_276: {},
  TEST_VALUE_277: {},
  TEST_VALUE_278: {},
  TEST_VALUE_279: {},
  TEST_VALUE_280: {},
  TEST_VALUE_281: {},
  TEST_VALUE_282: {},
  TEST_VALUE_283: {},
  TEST_VALUE_284: {},
  TEST_VALUE_285: {},
  TEST_VALUE_286: {},
  TEST_VALUE_287: {},
  TEST_VALUE_288: {},
  TEST_VALUE_289: {},
  TEST_VALUE_290: {},
  TEST_VALUE_291: {},
  TEST_VALUE_292: {},
  TEST_VALUE_293: {},
  TEST_VALUE_294: {},
  TEST_VALUE_295: {},
  TEST_VALUE_296: {},
  TEST_VALUE_297: {},
  TEST_VALUE_298: {},
  TEST_VALUE_299: {},
  TEST_VALUE_300: {},
  TEST_VALUE_301: {},
  TEST_VALUE_302: {},
  TEST_VALUE_303: {},
  TEST_VALUE_304: {},
  TEST_VALUE_305: {},
  TEST_VALUE_306: {},
  TEST_VALUE_307: {},
  TEST_VALUE_308: {},
  TEST_VALUE_309: {},
  TEST_VALUE_310: {},
  TEST_VALUE_311: {},
  TEST_VALUE_312: {},
  TEST_VALUE_313: {},
  TEST_VALUE_314: {},
  TEST_VALUE_315: {},
  TEST_VALUE_316: {},
  TEST_VALUE_317: {},
  TEST_VALUE_318: {},
  TEST_VALUE_319: {},
  TEST_VALUE_320: {},
  TEST_VALUE_321: {},
  TEST_VALUE_322: {},
  TEST_VALUE_323: {},
  TEST_VALUE_324: {},
  TEST_VALUE_325: {},
  TEST_VALUE_326: {},
  TEST_VALUE_327: {},
  TEST_VALUE_328: {},
  TEST_VALUE_329: {},
  TEST_VALUE_330: {},
  TEST_VALUE_331: {},
  TEST_VALUE_332: {},
  TEST_VALUE_333: {},
  TEST_VALUE_334: {},
  TEST_VALUE_335: {},
  TEST_VALUE_336: {},
  TEST_VALUE_337: {},
  TEST_VALUE_338: {},
  TEST_VALUE_339: {},
  TEST_VALUE_340: {},
  TEST_VALUE_341: {},
  TEST_VALUE_342: {},
  TEST_VALUE_343: {},
  TEST_VALUE_344: {},
  TEST_VALUE_345: {},
  TEST_VALUE_346: {},
  TEST_VALUE_347: {},
  TEST_VALUE_348: {},
  TEST_VALUE_349: {},
  TEST_VALUE_350: {},
  TEST_VALUE_351: {},
  TEST_VALUE_352: {},
  TEST_VALUE_353: {},
  TEST_VALUE_354: {},
  TEST_VALUE_355: {},
  TEST_VALUE_356: {},
  TEST_VALUE_357: {},
  TEST_VALUE_358: {},
  TEST_VALUE_359: {},
  TEST_VALUE_360: {},
  TEST_VALUE_361: {},
  TEST_VALUE_362: {},
  TEST_VALUE_363: {},
  TEST_VALUE_364: {},
  TEST_VALUE_365: {},
  TEST_VALUE_366: {},
  TEST_VALUE_367: {},
  TEST_VALUE_368: {},
  TEST_VALUE_369: {},
  TEST_VALUE_370: {},
  TEST_VALUE_371: {},
  TEST_VALUE_372: {},
  TEST_VALUE_373: {},
  TEST_VALUE_374: {},
  TEST_VALUE_375: {},
  TEST_VALUE_376: {},
  TEST_VALUE_377: {},
  TEST_VALUE_378: {},
  TEST_VALUE_379: {},
  TEST_VALUE_380: {},
  TEST_VALUE_381: {},
  TEST_VALUE_382: {},
  TEST_VALUE_383: {},
  TEST_VALUE_384: {},
  TEST_VALUE_385: {},
  TEST_VALUE_386: {},
  TEST_VALUE_387: {},
  TEST_VALUE_388: {},
  TEST_VALUE_389: {},
  TEST_VALUE_390: {},
  TEST_VALUE_391: {},
  TEST_VALUE_392: {},
  TEST_VALUE_393: {},
  TEST_VALUE_394: {},
  TEST_VALUE_395: {},
  TEST_VALUE_396: {},
  TEST_VALUE_397: {},
  TEST_VALUE_398: {},
  TEST_VALUE_399: {},
  TEST_VALUE_400: {},
  TEST_VALUE_401: {},
  TEST_VALUE_402: {},
  TEST_VALUE_403: {},
  TEST_VALUE_404: {},
  TEST_VALUE_405: {},
  TEST_VALUE_406: {},
  TEST_VALUE_407: {},
  TEST_VALUE_408: {},
  TEST_VALUE_409: {},
  TEST_VALUE_410: {},
  TEST_VALUE_411: {},
  TEST_VALUE_412: {},
  TEST_VALUE_413: {},
  TEST_VALUE_414: {},
  TEST_VALUE_415: {},
  TEST_VALUE_416: {},
  TEST_VALUE_417: {},
  TEST_VALUE_418: {},
  TEST_VALUE_419: {},
  TEST_VALUE_420: {},
  TEST_VALUE_421: {},
  TEST_VALUE_422: {},
  TEST_VALUE_423: {},
  TEST_VALUE_424: {},
  TEST_VALUE_425: {},
  TEST_VALUE_426: {},
  TEST_VALUE_427: {},
  TEST_VALUE_428: {},
  TEST_VALUE_429: {},
  TEST_VALUE_430: {},
  TEST_VALUE_431: {},
  TEST_VALUE_432: {},
  TEST_VALUE_433: {},
  TEST_VALUE_434: {},
  TEST_VALUE_435: {},
  TEST_VALUE_436: {},
  TEST_VALUE_437: {},
  TEST_VALUE_438: {},
  TEST_VALUE_439: {},
  TEST_VALUE_440: {},
  TEST_VALUE_441: {},
  TEST_VALUE_442: {},
  TEST_VALUE_443: {},
  TEST_VALUE_444: {},
  TEST_VALUE_445: {},
  TEST_VALUE_446: {},
  TEST_VALUE_447: {},
  TEST_VALUE_448: {},
  TEST_VALUE_449: {},
  TEST_VALUE_450: {},
  TEST_VALUE_451: {},
  TEST_VALUE_452: {},
  TEST_VALUE_453: {},
  TEST_VALUE_454: {},
  TEST_VALUE_455: {},
  TEST_VALUE_456: {},
  TEST_VALUE_457: {},
  TEST_VALUE_458: {},
  TEST_VALUE_459: {},
  TEST_VALUE_460: {},
  TEST_VALUE_461: {},
  TEST_VALUE_462: {},
  TEST_VALUE_463: {},
  TEST_VALUE_464: {},
  TEST_VALUE_465: {},
  TEST_VALUE_466: {},
  TEST_VALUE_467: {},
  TEST_VALUE_468: {},
  TEST_VALUE_469: {},
  TEST_VALUE_470: {},
  TEST_VALUE_471: {},
  TEST_VALUE_472: {},
  TEST_VALUE_473: {},
  TEST_VALUE_474: {},
  TEST_VALUE_475: {},
  TEST_VALUE_476: {},
  TEST_VALUE_477: {},
  TEST_VALUE_478: {},
  TEST_VALUE_479: {},
  TEST_VALUE_480: {},
  TEST_VALUE_481: {},
  TEST_VALUE_482: {},
  TEST_VALUE_483: {},
  TEST_VALUE_484: {},
  TEST_VALUE_485: {},
  TEST_VALUE_486: {},
  TEST_VALUE_487: {},
  TEST_VALUE_488: {},
  TEST_VALUE_489: {},
  TEST_VALUE_490: {},
  TEST_VALUE_491: {},
  TEST_VALUE_492: {},
  TEST_VALUE_493: {},
  TEST_VALUE_494: {},
  TEST_VALUE_495: {},
  TEST_VALUE_496: {},
  TEST_VALUE_497: {},
  TEST_VALUE_498: {},
  TEST_VALUE_499: {},
  TEST_VALUE_500: {},

} as const

export type ComputedStatKeys = keyof typeof BaseComputedStatsConfig

export type StatConfig = {
  name: string
  index: number
  default: number
  flat: boolean
  whole: boolean
  category: StatCategory
}

export type ComputedStatsConfigType = {
  [K in ComputedStatKeys]: StatConfig;
}

export const StatsConfig: ComputedStatsConfigType = Object.fromEntries(
  Object.entries(BaseComputedStatsConfig).map(([key, value], index) => {
    const baseValue = value as ComputedStatsConfigBaseType

    return [
      key,
      {
        name: key,
        index: index,
        default: baseValue.default ?? 0,
        flat: baseValue.flat ?? false,
        whole: baseValue.whole ?? false,
        category: baseValue.category ?? StatCategory.NONE,
      },
    ]
  }),
) as ComputedStatsConfigType

export type ComputedStatsObject = {
  [K in keyof typeof StatsConfig]: number;
}

export const baseComputedStatsObject: ComputedStatsObject = Object.fromEntries(
  Object.entries(StatsConfig).map(([key, value]) => [key, value.default]),
) as ComputedStatsObject

export const StatsConfigByIndex: StatConfig[] = Object.values(StatsConfig).sort((a, b) => a.index - b.index)
