import {
  compareAbilityNameArrays,
  DEFAULT_BASIC,
  DEFAULT_FUA,
  DEFAULT_MEMO_SKILL,
  DEFAULT_MEMO_TALENT,
  DEFAULT_SKILL,
  DEFAULT_ULT,
  END_BASIC,
  END_FUA,
  END_SKILL,
  END_ULT,
  NULL_TURN_ABILITY_NAME,
  START_BASIC,
  START_FUA,
  START_SKILL,
  START_ULT,
  WHOLE_BASIC,
  WHOLE_FUA,
  WHOLE_MEMO_SKILL,
  WHOLE_MEMO_TALENT,
  WHOLE_SKILL,
} from 'lib/optimization/rotation/turnAbilityConfig'
import { preprocessTurnAbilityNames } from 'lib/optimization/rotation/turnPreprocessor'
import {
  expect,
  test,
} from 'vitest'

test('Anaxa annotated', () => {
  expect(compareAbilityNameArrays(
    preprocessTurnAbilityNames([
      NULL_TURN_ABILITY_NAME,
      START_ULT,
      DEFAULT_SKILL,
      END_SKILL,
      START_SKILL,
      END_SKILL,
    ]),
    [
      NULL_TURN_ABILITY_NAME,
      START_ULT,
      DEFAULT_SKILL,
      END_SKILL,
      START_SKILL,
      END_SKILL,
    ],
  )).toBeTruthy()
})

test('Anaxa unannotated', () => {
  expect(compareAbilityNameArrays(
    preprocessTurnAbilityNames([
      NULL_TURN_ABILITY_NAME,
      DEFAULT_ULT,
      DEFAULT_SKILL,
      DEFAULT_SKILL,
      DEFAULT_SKILL,
      DEFAULT_SKILL,
    ]),
    [
      NULL_TURN_ABILITY_NAME,
      DEFAULT_ULT,
      WHOLE_SKILL,
      WHOLE_SKILL,
      WHOLE_SKILL,
      WHOLE_SKILL,
    ],
  )).toBeTruthy()
})

test('Open bracket', () => {
  expect(compareAbilityNameArrays(
    preprocessTurnAbilityNames([
      NULL_TURN_ABILITY_NAME,
      START_SKILL,
      DEFAULT_SKILL,
      DEFAULT_SKILL,
    ]),
    [
      NULL_TURN_ABILITY_NAME,
      WHOLE_SKILL,
      WHOLE_SKILL,
      WHOLE_SKILL,
    ],
  )).toBeTruthy()
})

test('Closed bracket', () => {
  expect(compareAbilityNameArrays(
    preprocessTurnAbilityNames([
      NULL_TURN_ABILITY_NAME,
      DEFAULT_SKILL,
      DEFAULT_SKILL,
      END_SKILL,
    ]),
    [
      NULL_TURN_ABILITY_NAME,
      WHOLE_SKILL,
      WHOLE_SKILL,
      WHOLE_SKILL,
    ],
  )).toBeTruthy()
})

test('Complex invalid rotation', () => {
  expect(compareAbilityNameArrays(
    preprocessTurnAbilityNames([
      NULL_TURN_ABILITY_NAME,
      DEFAULT_FUA,
      END_SKILL,
      DEFAULT_MEMO_SKILL,
      START_ULT,
      DEFAULT_FUA,
      START_SKILL,
      DEFAULT_MEMO_TALENT,
      DEFAULT_ULT,
      END_BASIC,
      DEFAULT_FUA,
      START_BASIC,
      DEFAULT_SKILL,
      END_ULT,
      START_ULT,
      END_SKILL,
      WHOLE_MEMO_SKILL,
      WHOLE_FUA,
      END_BASIC,
      DEFAULT_BASIC,
      START_SKILL,
      DEFAULT_ULT,
      DEFAULT_MEMO_SKILL,
      START_BASIC,
      DEFAULT_FUA,
      END_FUA,
      DEFAULT_SKILL,
      DEFAULT_SKILL,
      START_BASIC,
      DEFAULT_SKILL,
      END_BASIC,
      END_ULT,
      START_SKILL,
    ]),
    [
      NULL_TURN_ABILITY_NAME,
      DEFAULT_FUA,
      WHOLE_SKILL,
      DEFAULT_MEMO_SKILL,
      DEFAULT_ULT,
      DEFAULT_FUA,
      START_SKILL,
      DEFAULT_MEMO_TALENT,
      DEFAULT_ULT,
      END_BASIC,
      DEFAULT_FUA,
      START_BASIC,
      DEFAULT_SKILL,
      END_ULT,
      START_ULT,
      END_SKILL,
      DEFAULT_MEMO_SKILL,
      DEFAULT_FUA,
      WHOLE_BASIC,
      WHOLE_BASIC,
      WHOLE_SKILL,
      DEFAULT_ULT,
      DEFAULT_MEMO_SKILL,
      START_BASIC,
      DEFAULT_FUA,
      END_FUA,
      WHOLE_SKILL,
      WHOLE_SKILL,
      START_BASIC,
      DEFAULT_SKILL,
      END_BASIC,
      DEFAULT_ULT,
      WHOLE_SKILL,
    ],
  )).toBeTruthy()
})

test('Complex invalid rotation 2', () => {
  expect(compareAbilityNameArrays(
    preprocessTurnAbilityNames([
      NULL_TURN_ABILITY_NAME,
      END_ULT,
      START_ULT,
      START_SKILL,
      DEFAULT_ULT,
      END_BASIC,
      START_SKILL,
      DEFAULT_MEMO_SKILL,
      END_ULT,
      WHOLE_FUA,
      WHOLE_MEMO_TALENT,
      DEFAULT_ULT,
      DEFAULT_ULT,
      DEFAULT_BASIC,
      DEFAULT_ULT,
      START_BASIC,
      END_SKILL,
      DEFAULT_SKILL,
      START_ULT,
      DEFAULT_MEMO_TALENT,
      DEFAULT_MEMO_SKILL,
      END_BASIC,
      DEFAULT_ULT,
      START_SKILL,
      END_ULT,
      DEFAULT_SKILL,
      DEFAULT_ULT,
      DEFAULT_FUA,
      DEFAULT_BASIC,
      START_ULT,
      START_SKILL,
      DEFAULT_SKILL,
      END_ULT,
      END_BASIC,
      START_FUA,
    ]),
    [
      NULL_TURN_ABILITY_NAME,
      DEFAULT_ULT,
      DEFAULT_ULT,
      START_SKILL,
      DEFAULT_ULT,
      END_BASIC,
      START_SKILL,
      DEFAULT_MEMO_SKILL,
      END_ULT,
      DEFAULT_FUA,
      DEFAULT_MEMO_TALENT,
      DEFAULT_ULT,
      DEFAULT_ULT,
      WHOLE_BASIC,
      DEFAULT_ULT,
      START_BASIC,
      END_SKILL,
      WHOLE_SKILL,
      START_ULT,
      DEFAULT_MEMO_TALENT,
      DEFAULT_MEMO_SKILL,
      END_BASIC,
      DEFAULT_ULT,
      START_SKILL,
      END_ULT,
      WHOLE_SKILL,
      DEFAULT_ULT,
      DEFAULT_FUA,
      WHOLE_BASIC,
      DEFAULT_ULT,
      START_SKILL,
      DEFAULT_SKILL,
      END_ULT,
      WHOLE_BASIC,
      DEFAULT_FUA,
    ],
  )).toBeTruthy()
})
