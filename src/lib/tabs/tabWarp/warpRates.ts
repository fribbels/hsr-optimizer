/*
The probability of a given run ending on a certain pull
let store = 1
let arr = []
for (let i = 0; i <= 90; i++) {
  store *= i == 0 ? 1 : 1 - chanceCharacter(i - 1)
  const val = store * chanceCharacter(i)
  console.log(i, val.toFixed(20))
  arr[i] = val
}
console.log(arr)

function chanceCharacter(n: number) {
  const softStacks = Math.max(0, n - 72)
  return 0.00600 + softStacks * 0.06
}
 */

export const characterDistribution = [
  /* 00 */ 0.006,
  /* 01 */ 0.005964,
  /* 02 */ 0.005928216,
  /* 03 */ 0.005892646704,
  /* 04 */ 0.005857290823776,
  /* 05 */ 0.005822147078833344,
  /* 06 */ 0.005787214196360344,
  /* 07 */ 0.0057524909111821825,
  /* 08 */ 0.005717975965715089,
  /* 09 */ 0.005683668109920798,
  /* 10 */ 0.005649566101261274,
  /* 11 */ 0.005615668704653705,
  /* 12 */ 0.005581974692425783,
  /* 13 */ 0.005548482844271228,
  /* 14 */ 0.005515191947205601,
  /* 15 */ 0.005482100795522367,
  /* 16 */ 0.005449208190749233,
  /* 17 */ 0.005416512941604738,
  /* 18 */ 0.00538401386395511,
  /* 19 */ 0.005351709780771379,
  /* 20 */ 0.00531959952208675,
  /* 21 */ 0.00528768192495423,
  /* 22 */ 0.005255955833404505,
  /* 23 */ 0.005224420098404077,
  /* 24 */ 0.005193073577813653,
  /* 25 */ 0.005161915136346771,
  /* 26 */ 0.00513094364552869,
  /* 27 */ 0.005100157983655518,
  /* 28 */ 0.0050695570357535856,
  /* 29 */ 0.005039139693539064,
  /* 30 */ 0.005008904855377829,
  /* 31 */ 0.004978851426245562,
  /* 32 */ 0.004948978317688089,
  /* 33 */ 0.004919284447781959,
  /* 34 */ 0.004889768741095268,
  /* 35 */ 0.0048604301286486965,
  /* 36 */ 0.004831267547876804,
  /* 37 */ 0.004802279942589543,
  /* 38 */ 0.004773466262934007,
  /* 39 */ 0.004744825465356403,
  /* 40 */ 0.004716356512564264,
  /* 41 */ 0.004688058373488879,
  /* 42 */ 0.004659930023247946,
  /* 43 */ 0.004631970443108458,
  /* 44 */ 0.004604178620449807,
  /* 45 */ 0.004576553548727109,
  /* 46 */ 0.004549094227434746,
  /* 47 */ 0.0045217996620701365,
  /* 48 */ 0.004494668864097716,
  /* 49 */ 0.00446770085091313,
  /* 50 */ 0.004440894645807651,
  /* 51 */ 0.0044142492779328055,
  /* 52 */ 0.004387763782265209,
  /* 53 */ 0.004361437199571617,
  /* 54 */ 0.004335268576374188,
  /* 55 */ 0.004309256964915942,
  /* 56 */ 0.004283401423126446,
  /* 57 */ 0.004257701014587688,
  /* 58 */ 0.004232154808500162,
  /* 59 */ 0.0042067618796491615,
  /* 60 */ 0.004181521308371266,
  /* 61 */ 0.004156432180521039,
  /* 62 */ 0.004131493587437912,
  /* 63 */ 0.004106704625913285,
  /* 64 */ 0.004082064398157804,
  /* 65 */ 0.004057572011768857,
  /* 66 */ 0.004033226579698244,
  /* 67 */ 0.004009027220220055,
  /* 68 */ 0.003984973056898735,
  /* 69 */ 0.003961063218557342,
  /* 70 */ 0.003937296839245998,
  /* 71 */ 0.003913673058210522,
  /* 72 */ 0.0038901910198612588,
  /* 73 */ 0.04253534861116301,
  /* 74 */ 0.07584439342357738,
  /* 75 */ 0.0978537140675431,
  /* 76 */ 0.105347414622264,
  /* 77 */ 0.09880559711913513,
  /* 78 */ 0.08201639506747972,
  /* 79 */ 0.06052272143553331,
  /* 80 */ 0.039633005780615294,
  /* 81 */ 0.02288634830101852,
  /* 82 */ 0.011532204560383551,
  /* 83 */ 0.00499355875488925,
  /* 84 */ 0.0018181052569377857,
  /* 85 */ 0.0005393311577894619,
  /* 86 */ 0.00012422731568808565,
  /* 87 */ 0.00002048781559582088,
  /* 88 */ 0.000002053394710113599,
  /* 89 */ 0.00000007415178164348,
]

/*
The probability of a given run ending on a certain pull

let store = 1
let arr = []
for (let i = 0; i <= 80; i++) {
 store *= i == 0 ? 1 : 1 - chanceLightCone(i - 1)
 const val = store * chanceLightCone(i)
 console.log(i, val.toFixed(20))
 arr[i] = val
}
console.log(arr)

function chanceLightCone(n: number) {
 const softStacks = Math.max(0, n - 64)
 return 0.00800 + softStacks * 0.07
}
 */

export const lightConeDistribution = [
  /* 00 */ 0.008,
  /* 01 */ 0.007936,
  /* 02 */ 0.007872512,
  /* 03 */ 0.007809531904,
  /* 04 */ 0.0077470556487679995,
  /* 05 */ 0.007685079203577855,
  /* 06 */ 0.0076235985699492324,
  /* 07 */ 0.007562609781389638,
  /* 08 */ 0.007502108903138521,
  /* 09 */ 0.007442092031913413,
  /* 10 */ 0.007382555295658106,
  /* 11 */ 0.007323494853292841,
  /* 12 */ 0.007264906894466498,
  /* 13 */ 0.007206787639310767,
  /* 14 */ 0.00714913333819628,
  /* 15 */ 0.007091940271490709,
  /* 16 */ 0.007035204749318783,
  /* 17 */ 0.006978923111324233,
  /* 18 */ 0.00692309172643364,
  /* 19 */ 0.0068677069926221706,
  /* 20 */ 0.006812765336681193,
  /* 21 */ 0.006758263213987744,
  /* 22 */ 0.006704197108275842,
  /* 23 */ 0.006650563531409635,
  /* 24 */ 0.006597359023158357,
  /* 25 */ 0.00654458015097309,
  /* 26 */ 0.006492223509765305,
  /* 27 */ 0.006440285721687183,
  /* 28 */ 0.006388763435913685,
  /* 29 */ 0.006337653328426376,
  /* 30 */ 0.006286952101798964,
  /* 31 */ 0.006236656484984573,
  /* 32 */ 0.006186763233104696,
  /* 33 */ 0.006137269127239857,
  /* 34 */ 0.006088170974221939,
  /* 35 */ 0.006039465606428163,
  /* 36 */ 0.005991149881576737,
  /* 37 */ 0.005943220682524123,
  /* 38 */ 0.005895674917063929,
  /* 39 */ 0.005848509517727418,
  /* 40 */ 0.005801721441585599,
  /* 41 */ 0.005755307670052914,
  /* 42 */ 0.00570926520869249,
  /* 43 */ 0.00566359108702295,
  /* 44 */ 0.005618282358326766,
  /* 45 */ 0.005573336099460153,
  /* 46 */ 0.005528749410664471,
  /* 47 */ 0.005484519415379155,
  /* 48 */ 0.005440643260056121,
  /* 49 */ 0.005397118113975672,
  /* 50 */ 0.005353941169063867,
  /* 51 */ 0.005311109639711356,
  /* 52 */ 0.005268620762593665,
  /* 53 */ 0.005226471796492916,
  /* 54 */ 0.0051846600221209715,
  /* 55 */ 0.005143182741944004,
  /* 56 */ 0.005102037280008452,
  /* 57 */ 0.005061220981768384,
  /* 58 */ 0.0050207312139142375,
  /* 59 */ 0.004980565364202923,
  /* 60 */ 0.0049407208412893,
  /* 61 */ 0.004901195074558986,
  /* 62 */ 0.004861985513962514,
  /* 63 */ 0.004823089629850814,
  /* 64 */ 0.004784504912812008,
  /* 65 */ 0.046275731516717745,
  /* 66 */ 0.08095642589545174,
  /* 67 */ 0.10159812648728124,
  /* 68 */ 0.1049611176833006,
  /* 69 */ 0.09289642032292567,
  /* 70 */ 0.07130085695712911,
  /* 71 */ 0.04745438530228964,
  /* 72 */ 0.027170589573400922,
  /* 73 */ 0.013184241577222656,
  /* 74 */ 0.005296345422062471,
  /* 75 */ 0.0016994386548057395,
  /* 76 */ 0.0004112204670939708,
  /* 77 */ 0.00006766516402880222,
  /* 78 */ 0.000005971634998864304,
  /* 79 */ 0.00000007673671856840,
]

/*
const cumulative = []
for (let i = 0; i < 90; i++) {
  cumulative[i] = i == 0 ? characterDistribution[i] : cumulative[i - 1] + characterDistribution[i]
}
console.log(cumulative)
 */

export const characterCumulative = [
  /* 00 */ 0.006,
  /* 01 */ 0.011963999999999999,
  /* 02 */ 0.017892216,
  /* 03 */ 0.023784862704,
  /* 04 */ 0.029642153527776,
  /* 05 */ 0.03546430060660934,
  /* 06 */ 0.04125151480296969,
  /* 07 */ 0.04700400571415187,
  /* 08 */ 0.05272198167986696,
  /* 09 */ 0.05840564978978776,
  /* 10 */ 0.06405521589104904,
  /* 11 */ 0.06967088459570274,
  /* 12 */ 0.07525285928812853,
  /* 13 */ 0.08080134213239976,
  /* 14 */ 0.08631653407960535,
  /* 15 */ 0.09179863487512771,
  /* 16 */ 0.09724784306587694,
  /* 17 */ 0.10266435600748168,
  /* 18 */ 0.10804836987143679,
  /* 19 */ 0.11340007965220816,
  /* 20 */ 0.1187196791742949,
  /* 21 */ 0.12400736109924913,
  /* 22 */ 0.12926331693265364,
  /* 23 */ 0.1344877370310577,
  /* 24 */ 0.13968081060887136,
  /* 25 */ 0.14484272574521814,
  /* 26 */ 0.14997366939074683,
  /* 27 */ 0.15507382737440234,
  /* 28 */ 0.16014338441015594,
  /* 29 */ 0.165182524103695,
  /* 30 */ 0.17019142895907283,
  /* 31 */ 0.1751702803853184,
  /* 32 */ 0.1801192587030065,
  /* 33 */ 0.18503854315078844,
  /* 34 */ 0.1899283118918837,
  /* 35 */ 0.1947887420205324,
  /* 36 */ 0.1996200095684092,
  /* 37 */ 0.20442228951099875,
  /* 38 */ 0.20919575577393276,
  /* 39 */ 0.21394058123928916,
  /* 40 */ 0.21865693775185344,
  /* 41 */ 0.2233449961253423,
  /* 42 */ 0.22800492614859025,
  /* 43 */ 0.2326368965916987,
  /* 44 */ 0.23724107521214852,
  /* 45 */ 0.24181762876087562,
  /* 46 */ 0.24636672298831036,
  /* 47 */ 0.2508885226503805,
  /* 48 */ 0.2553831915144782,
  /* 49 */ 0.25985089236539133,
  /* 50 */ 0.264291787011199,
  /* 51 */ 0.2687060362891318,
  /* 52 */ 0.273093800071397,
  /* 53 */ 0.2774552372709686,
  /* 54 */ 0.2817905058473428,
  /* 55 */ 0.28609976281225874,
  /* 56 */ 0.2903831642353852,
  /* 57 */ 0.29464086524997285,
  /* 58 */ 0.298873020058473,
  /* 59 */ 0.30307978193812213,
  /* 60 */ 0.30726130324649337,
  /* 61 */ 0.3114177354270144,
  /* 62 */ 0.3155492290144523,
  /* 63 */ 0.3196559336403656,
  /* 64 */ 0.3237379980385234,
  /* 65 */ 0.32779557005029225,
  /* 66 */ 0.3318287966299905,
  /* 67 */ 0.33583782385021055,
  /* 68 */ 0.33982279690710926,
  /* 69 */ 0.3437838601256666,
  /* 70 */ 0.34772115696491257,
  /* 71 */ 0.35163483002312307,
  /* 72 */ 0.35552502104298433,
  /* 73 */ 0.3980603696541474,
  /* 74 */ 0.4739047630777248,
  /* 75 */ 0.5717584771452678,
  /* 76 */ 0.6771058917675319,
  /* 77 */ 0.7759114888866671,
  /* 78 */ 0.8579278839541468,
  /* 79 */ 0.91845060538968,
  /* 80 */ 0.9580836111702953,
  /* 81 */ 0.9809699594713138,
  /* 82 */ 0.9925021640316973,
  /* 83 */ 0.9974957227865866,
  /* 84 */ 0.9993138280435244,
  /* 85 */ 0.9998531592013139,
  /* 86 */ 0.999977386517002,
  /* 87 */ 0.9999978743325978,
  /* 88 */ 0.999999927727308,
  /* 89 */ 1.0000000018790896,
]

/*
const cumulative = []
for (let i = 0; i < 80; i++) {
  cumulative[i] = i == 0 ? lightConeDistribution[i] : cumulative[i - 1] + lightConeDistribution[i]
}
console.log(cumulative)
 */
export const lightConeCumulative = [
  /* 00 */ 0.008,
  /* 01 */ 0.015936,
  /* 02 */ 0.023808511999999997,
  /* 03 */ 0.031618043904,
  /* 04 */ 0.039365099552768,
  /* 05 */ 0.04705017875634585,
  /* 06 */ 0.05467377732629508,
  /* 07 */ 0.06223638710768472,
  /* 08 */ 0.06973849601082324,
  /* 09 */ 0.07718058804273666,
  /* 10 */ 0.08456314333839476,
  /* 11 */ 0.0918866381916876,
  /* 12 */ 0.0991515450861541,
  /* 13 */ 0.10635833272546487,
  /* 14 */ 0.11350746606366115,
  /* 15 */ 0.12059940633515186,
  /* 16 */ 0.12763461108447063,
  /* 17 */ 0.13461353419579486,
  /* 18 */ 0.1415366259222285,
  /* 19 */ 0.14840433291485067,
  /* 20 */ 0.15521709825153185,
  /* 21 */ 0.16197536146551958,
  /* 22 */ 0.1686795585737954,
  /* 23 */ 0.17533012210520504,
  /* 24 */ 0.1819274811283634,
  /* 25 */ 0.1884720612793365,
  /* 26 */ 0.1949642847891018,
  /* 27 */ 0.20140457051078897,
  /* 28 */ 0.20779333394670266,
  /* 29 */ 0.21413098727512903,
  /* 30 */ 0.220417939376928,
  /* 31 */ 0.22665459586191256,
  /* 32 */ 0.23284135909501724,
  /* 33 */ 0.2389786282222571,
  /* 34 */ 0.24506679919647903,
  /* 35 */ 0.2511062648029072,
  /* 36 */ 0.25709741468448394,
  /* 37 */ 0.26304063536700806,
  /* 38 */ 0.268936310284072,
  /* 39 */ 0.2747848198017994,
  /* 40 */ 0.280586541243385,
  /* 41 */ 0.2863418489134379,
  /* 42 */ 0.29205111412213036,
  /* 43 */ 0.29771470520915333,
  /* 44 */ 0.3033329875674801,
  /* 45 */ 0.30890632366694026,
  /* 46 */ 0.3144350730776047,
  /* 47 */ 0.31991959249298385,
  /* 48 */ 0.32536023575303996,
  /* 49 */ 0.33075735386701566,
  /* 50 */ 0.3361112950360795,
  /* 51 */ 0.3414224046757909,
  /* 52 */ 0.34669102543838454,
  /* 53 */ 0.3519174972348775,
  /* 54 */ 0.35710215725699845,
  /* 55 */ 0.3622453399989425,
  /* 56 */ 0.36734737727895095,
  /* 57 */ 0.3724085982607193,
  /* 58 */ 0.37742932947463353,
  /* 59 */ 0.3824098948388365,
  /* 60 */ 0.3873506156801258,
  /* 61 */ 0.3922518107546848,
  /* 62 */ 0.3971137962686473,
  /* 63 */ 0.40193688589849813,
  /* 64 */ 0.40672139081131015,
  /* 65 */ 0.4529971223280279,
  /* 66 */ 0.5339535482234796,
  /* 67 */ 0.6355516747107609,
  /* 68 */ 0.7405127923940615,
  /* 69 */ 0.8334092127169872,
  /* 70 */ 0.9047100696741163,
  /* 71 */ 0.9521644549764059,
  /* 72 */ 0.9793350445498068,
  /* 73 */ 0.9925192861270294,
  /* 74 */ 0.9978156315490919,
  /* 75 */ 0.9995150702038976,
  /* 76 */ 0.9999262906709916,
  /* 77 */ 0.9999939558350204,
  /* 78 */ 0.9999999274700192,
  /* 79 */ 1.0000000042067378,
]
